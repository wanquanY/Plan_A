services:
  # Redis 缓存
  redis:
    image: redis:alpine
    container_name: freewrite-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_TARGET=backend
    container_name: freewrite-backend
    restart: always
    depends_on:
      - redis
    ports:
      - "1314:1314"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - API_V1_STR=${API_V1_STR}
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - LOG_LEVEL=${LOG_LEVEL}
      - CONSOLE_LOG_LEVEL=${CONSOLE_LOG_LEVEL}
      - FILE_LOG_LEVEL=${FILE_LOG_LEVEL}
      - LOG_DIR=${LOG_DIR}
      - LOG_ROTATION=${LOG_ROTATION:-day}
      - LOG_MAX_BYTES=${LOG_MAX_BYTES:-10485760}
      - LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT:-7}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO:-false}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./logs:/app/logs
    mem_limit: 4g
    memswap_limit: 8g

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_TARGET=frontend
        - API_BASE_URL=/api/v1
    container_name: freewrite-frontend
    restart: always
    ports:
      - "9090:80"
    depends_on:
      - backend