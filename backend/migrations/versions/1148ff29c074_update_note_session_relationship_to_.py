"""update note session relationship to many to many

Revision ID: 1148ff29c074
Revises: 3cbeed4cb881
Create Date: 2025-06-03 10:49:12.641530

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1148ff29c074'
down_revision = '3cbeed4cb881'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_settings_id', table_name='user_settings')
    op.drop_index('ix_user_settings_is_deleted', table_name='user_settings')
    op.drop_index('ix_user_settings_user_id', table_name='user_settings')
    op.drop_table('user_settings')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('system_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('max_memory', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('model_settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('tools_enabled', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_settings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_settings_pkey')
    )
    op.create_index('ix_user_settings_user_id', 'user_settings', ['user_id'], unique=True)
    op.create_index('ix_user_settings_is_deleted', 'user_settings', ['is_deleted'], unique=False)
    op.create_index('ix_user_settings_id', 'user_settings', ['id'], unique=False)
    # ### end Alembic commands ### 