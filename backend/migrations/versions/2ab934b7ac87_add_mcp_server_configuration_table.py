"""Add MCP server configuration table

Revision ID: 2ab934b7ac87
Revises: 926cfd13592a
Create Date: 2025-06-14 23:34:59.408965

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2ab934b7ac87'
down_revision = '926cfd13592a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_mcp_server_logs_id', table_name='mcp_server_logs')
    op.drop_index('ix_mcp_server_logs_is_deleted', table_name='mcp_server_logs')
    op.drop_index('ix_mcp_server_logs_public_id', table_name='mcp_server_logs')
    op.drop_table('mcp_server_logs')
    op.add_column('mcp_servers', sa.Column('cwd', sa.String(length=500), nullable=True, comment='工作目录'))
    op.add_column('mcp_servers', sa.Column('url', sa.String(length=500), nullable=True, comment='SSE服务器URL'))
    op.add_column('mcp_servers', sa.Column('headers', sa.JSON(), nullable=True, comment='HTTP请求头'))
    op.add_column('mcp_servers', sa.Column('auto_start', sa.Boolean(), nullable=False, comment='是否自动启动'))
    op.add_column('mcp_servers', sa.Column('tags', sa.JSON(), nullable=True, comment='标签列表'))
    op.alter_column('mcp_servers', 'args',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='命令参数数组',
               existing_comment='命令参数',
               existing_nullable=True)
    op.alter_column('mcp_servers', 'timeout',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='连接超时时间(秒)')
    op.alter_column('mcp_servers', 'retry_attempts',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='重试次数')
    op.alter_column('mcp_servers', 'retry_delay',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='重试延迟(秒)')
    op.alter_column('mcp_servers', 'config',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='额外配置信息',
               existing_comment='额外配置参数',
               existing_nullable=True)
    op.alter_column('mcp_servers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True,
               comment='创建时间')
    op.alter_column('mcp_servers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True,
               comment='更新时间')
    op.drop_index('ix_mcp_servers_is_deleted', table_name='mcp_servers')
    op.drop_index('ix_mcp_servers_public_id', table_name='mcp_servers')
    op.drop_index('ix_mcp_servers_name', table_name='mcp_servers')
    op.create_index(op.f('ix_mcp_servers_name'), 'mcp_servers', ['name'], unique=True)
    op.drop_constraint('mcp_servers_created_by_fkey', 'mcp_servers', type_='foreignkey')
    op.drop_column('mcp_servers', 'public_id')
    op.drop_column('mcp_servers', 'created_by')
    op.drop_column('mcp_servers', 'display_name')
    op.drop_column('mcp_servers', 'deleted_at')
    op.drop_column('mcp_servers', 'is_deleted')
    op.drop_column('mcp_servers', 'is_builtin')
    op.add_column('tool_call_history', sa.Column('mcp_server_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_tool_call_history_mcp_server_id'), 'tool_call_history', ['mcp_server_id'], unique=False)
    op.create_foreign_key(None, 'tool_call_history', 'mcp_servers', ['mcp_server_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tool_call_history', type_='foreignkey')
    op.drop_index(op.f('ix_tool_call_history_mcp_server_id'), table_name='tool_call_history')
    op.drop_column('tool_call_history', 'mcp_server_id')
    op.add_column('mcp_servers', sa.Column('is_builtin', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否为内置服务器'))
    op.add_column('mcp_servers', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('mcp_servers', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('mcp_servers', sa.Column('display_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='显示名称'))
    op.add_column('mcp_servers', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True, comment='创建者ID'))
    op.add_column('mcp_servers', sa.Column('public_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_foreign_key('mcp_servers_created_by_fkey', 'mcp_servers', 'users', ['created_by'], ['id'])
    op.drop_index(op.f('ix_mcp_servers_name'), table_name='mcp_servers')
    op.create_index('ix_mcp_servers_name', 'mcp_servers', ['name'], unique=False)
    op.create_index('ix_mcp_servers_public_id', 'mcp_servers', ['public_id'], unique=True)
    op.create_index('ix_mcp_servers_is_deleted', 'mcp_servers', ['is_deleted'], unique=False)
    op.alter_column('mcp_servers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               nullable=False,
               comment=None,
               existing_comment='更新时间')
    op.alter_column('mcp_servers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               nullable=False,
               comment=None,
               existing_comment='创建时间')
    op.alter_column('mcp_servers', 'config',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='额外配置参数',
               existing_comment='额外配置信息',
               existing_nullable=True)
    op.alter_column('mcp_servers', 'retry_delay',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='重试延迟(秒)')
    op.alter_column('mcp_servers', 'retry_attempts',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='重试次数')
    op.alter_column('mcp_servers', 'timeout',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='连接超时时间(秒)')
    op.alter_column('mcp_servers', 'args',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='命令参数',
               existing_comment='命令参数数组',
               existing_nullable=True)
    op.drop_column('mcp_servers', 'tags')
    op.drop_column('mcp_servers', 'auto_start')
    op.drop_column('mcp_servers', 'headers')
    op.drop_column('mcp_servers', 'url')
    op.drop_column('mcp_servers', 'cwd')
    op.create_table('mcp_server_logs',
    sa.Column('server_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='服务器ID'),
    sa.Column('log_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='日志类型: connect, disconnect, error, tool_call'),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False, comment='日志消息'),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='详细信息'),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['mcp_servers.id'], name='mcp_server_logs_server_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mcp_server_logs_pkey')
    )
    op.create_index('ix_mcp_server_logs_public_id', 'mcp_server_logs', ['public_id'], unique=True)
    op.create_index('ix_mcp_server_logs_is_deleted', 'mcp_server_logs', ['is_deleted'], unique=False)
    op.create_index('ix_mcp_server_logs_id', 'mcp_server_logs', ['id'], unique=False)
    # ### end Alembic commands ### 