"""change_user_agent_to_one_to_one_relationship

Revision ID: 36de8888589b
Revises: 204b93707d14
Create Date: 2025-06-03 14:41:40.880082

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '36de8888589b'
down_revision = '204b93707d14'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_agent_prompt_preferences_agent_id', table_name='agent_prompt_preferences')
    op.drop_index('ix_agent_prompt_preferences_id', table_name='agent_prompt_preferences')
    op.drop_index('ix_agent_prompt_preferences_is_deleted', table_name='agent_prompt_preferences')
    op.drop_index('ix_agent_prompt_preferences_user_preference_id', table_name='agent_prompt_preferences')
    op.drop_table('agent_prompt_preferences')
    op.drop_index('ix_user_prompt_preferences_id', table_name='user_prompt_preferences')
    op.drop_index('ix_user_prompt_preferences_is_deleted', table_name='user_prompt_preferences')
    op.drop_index('ix_user_prompt_preferences_user_id', table_name='user_prompt_preferences')
    op.drop_table('user_prompt_preferences')
    op.drop_index('ix_agents_user_id', table_name='agents')
    op.create_index(op.f('ix_agents_user_id'), 'agents', ['user_id'], unique=True)
    op.create_unique_constraint('uq_user_agent', 'agents', ['user_id'])
    op.alter_column('note_sessions', 'is_primary',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('note_sessions', 'is_primary',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               nullable=False)
    op.drop_constraint('uq_user_agent', 'agents', type_='unique')
    op.drop_index(op.f('ix_agents_user_id'), table_name='agents')
    op.create_index('ix_agents_user_id', 'agents', ['user_id'], unique=False)
    op.create_table('user_prompt_preferences',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_prompt_preferences_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('prompt_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('apply_to_all_agents', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_prompt_preferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_prompt_preferences_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_prompt_preferences_user_id', 'user_prompt_preferences', ['user_id'], unique=False)
    op.create_index('ix_user_prompt_preferences_is_deleted', 'user_prompt_preferences', ['is_deleted'], unique=False)
    op.create_index('ix_user_prompt_preferences_id', 'user_prompt_preferences', ['id'], unique=False)
    op.create_table('agent_prompt_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_preference_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('apply_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], name='agent_prompt_preferences_agent_id_fkey'),
    sa.ForeignKeyConstraint(['user_preference_id'], ['user_prompt_preferences.id'], name='agent_prompt_preferences_user_preference_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='agent_prompt_preferences_pkey')
    )
    op.create_index('ix_agent_prompt_preferences_user_preference_id', 'agent_prompt_preferences', ['user_preference_id'], unique=False)
    op.create_index('ix_agent_prompt_preferences_is_deleted', 'agent_prompt_preferences', ['is_deleted'], unique=False)
    op.create_index('ix_agent_prompt_preferences_id', 'agent_prompt_preferences', ['id'], unique=False)
    op.create_index('ix_agent_prompt_preferences_agent_id', 'agent_prompt_preferences', ['agent_id'], unique=False)
    # ### end Alembic commands ### 